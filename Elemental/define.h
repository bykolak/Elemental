#ifndef DEFINE_H
#define DEFINE_H
//colors
#define BLACK al_map_rgb(0, 0, 0)
#define MASK al_map_rgb(255,0,255)
#define RED al_map_rgb(255,0,0)
#define GREEN al_map_rgb(0,255,0)
#define DEGREE_90  1.5707963268
#define DEGREE_180  3.1415926536
#define DEGREE_270 4.7123889804
const int TILES_IN_ROW = 9;
const int PLAYER_X = 256;
const int PLAYER_Y = 64;
const int WIDTH = 1280;
const int HEIGHT = 720;



const int MAP_X =100; //X size of map
const int MAP_Y = 100;//Y size of map
const int TILE_SIZE = 96;// size of Tile in pixels

enum FILE_POSITON{TILE_Y=TILE_SIZE*3};
enum DIRECTION{ NORTH, WEST, EAST, SOUTH, MAX_DIRECTION };

enum KEYS { UP, DOWN, LEFT, RIGHT, SPACE, MAX_KEYS };

enum TILE_TYPE{ EMPTY_TILE, WALL_TILE, FLOOR_TILE, WATER_TILE, LAVA_TILE, MAX_TILE_TYPES };//basic type of tile

enum ID_TYPE  { EMPTY_TYPE, WALL_0, WALL_1, WALL_2, WALL_3, WALL_4, WALL_5, WALL_6, WALL_7, WALL_8, //exact texture of .tile
				FLOOR_0, FLOOR_1, FLOOR_2, FLOOR_3, FLOOR_4, FLOOR_5, FLOOR_6, FLOOR_7, FLOOR_8,
				WATER_O, WATER_1, LAVA_0, LAVA_1, MAX_ID_TYPE};

enum TILE_OBJECT{ EMPTY_OBJECT, DOOR, TRAP, ENTRANCE, EXIT, DECORATION, LEVER, TELEPORT,MAX_TILE_OBJECT }; //basic type of object 
enum ID_OBJECT{	EMPTY_ID, DOOR_0, DOOR_1, DOOR_2, DOOR_3, DOOR_4, TRAP_0, TRAP_1, TRAP_2, TRAP_3, TRAP_4,//exact texture of .object
				ENTRANCE_TILE, EXIT_TILE, DECORATION_0, DECORATION_1, DECORATION_2, DECORATION_3,
				DECORATION_4, LEVER_0, LEVER_01, LEVER_02, LEVER_03, LEVER_04, TELEPORT_01, TELEPORT_02,
				TELEPORT_03, TELEPORT_04,MAX_ID_OBJECT };
enum SPRITE_TYPE{ PLAYER, ENEMY_0, ENEMY_1,ENEMY_2, ENEMY_3, ENEMY_4, ENEMY_5, ENEMY_6, ENEMY_7};

#endif
